'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _rcDialog = require('rc-dialog');

var _rcDialog2 = _interopRequireDefault(_rcDialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @author sunyue
 *
 * 基于[rc-dialog](http://react-component.github.io/dialog/)
 */

var Modal = function (_React$Component) {
    _inherits(Modal, _React$Component);

    function Modal() {
        _classCallCheck(this, Modal);

        return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }

    Modal.prototype.handleCancel = function handleCancel(e) {
        this.props.onCancel(e);
    };

    Modal.prototype.render = function render() {
        var _this2 = this;

        var _props = this.props,
            footer = _props.footer,
            title = _props.title,
            visible = _props.visible,
            others = _objectWithoutProperties(_props, ['footer', 'title', 'visible']);

        var dialogTitle = title || '弹窗';

        return _react2.default.createElement(_rcDialog2.default, _extends({
            title: dialogTitle,
            footer: footer,
            visible: visible,
            onClick: function onClick(e) {
                return _this2.handleCancel(e);
            },
            onClose: function onClose(e) {
                return _this2.handleCancel(e);
            }
        }, others));
    };

    return Modal;
}(_react2.default.Component);

exports.default = Modal;


Modal.propTypes = {
    /**
     * 对话框标题
     */
    title: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element]),
    /**
     * 对话框底部是否需要按钮,默认为需要，如不需要，则设置为 null
     */
    footer: _propTypes2.default.array,
    /**
     * 是否显示对话框
     */
    visible: _propTypes2.default.bool,
    /**
     * 点击取消按钮回调函数
     */
    onCancel: _propTypes2.default.func
};

Modal.defaultProps = {
    title: '',
    footer: null,
    visible: false,
    onCancel: function onCancel() {}
};