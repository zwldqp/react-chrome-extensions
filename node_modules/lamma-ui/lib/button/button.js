'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = Button;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var prefix = 'rc-btn-';

/**
 *  @author sunyue
 *
 *  按钮用于开始一个即时操作。
 *
 *  目前分为普通按钮 和 Icon 按钮
 */
function Button(props) {
    var _classNames;

    var className = props.className,
        disabled = props.disabled,
        onClick = props.onClick,
        size = props.size,
        type = props.type,
        children = props.children,
        otherProps = _objectWithoutProperties(props, ['className', 'disabled', 'onClick', 'size', 'type', 'children']);
    // large -> lg, small -> sm


    var sizeCls = {
        large: 'lg',
        small: 'sm'
    }[size] || '';

    var classes = (0, _classnames2.default)((_classNames = {
        'rc-btn': true
    }, _classNames[prefix + type] = type, _classNames[prefix + sizeCls] = sizeCls, _classNames[className] = className, _classNames));

    return _react2.default.createElement(
        'button',
        _extends({ className: classes, disabled: disabled, onClick: onClick }, otherProps),
        children
    );
}

Button.propTypes = {
    /**
    * 按钮样式
    */
    className: _propTypes2.default.string,
    /**
    * 按钮是否禁用
    */
    disabled: _propTypes2.default.bool,
    /**
    * 按钮点击回调函数
    */
    onClick: _propTypes2.default.func,
    /**
    * 按钮类型
    */
    type: _propTypes2.default.oneOf(['primary', 'default', 'box']),
    /**
    * 按钮大小
    */
    size: _propTypes2.default.oneOf(['large', 'default', 'small']),
    children: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.string, _propTypes2.default.object]).isRequired
};

Button.defaultProps = {
    className: '',
    disabled: false,
    onClick: function onClick() {},

    type: 'default',
    size: 'default'
};