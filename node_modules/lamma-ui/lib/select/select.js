'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _rcSelect = require('rc-select');

var _rcSelect2 = _interopRequireDefault(_rcSelect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var prefixSelect = 'rc-select';

/**
 * @author sunyue
 *
 * 基于 [rc-select](http://react-component.github.io/select/)
 */
function Select(props) {
    var _classNames;

    var className = props.className,
        size = props.size,
        other = _objectWithoutProperties(props, ['className', 'size']);

    var selectClass = (0, _classnames2.default)((_classNames = {}, _classNames[prefixSelect + '-lg'] = size === 'large', _classNames[prefixSelect + '-sm'] = size === 'small', _classNames[className] = !!className, _classNames));

    return _react2.default.createElement(_rcSelect2.default, _extends({ className: selectClass }, other));
}

Select.propTypes = {
    /**
    * 输入框大小
    */
    size: _propTypes2.default.oneOf(['large', 'default', 'small']),
    /**
    * Select下拉框样式
    */
    className: _propTypes2.default.string,
    /**
    * 是否禁用下拉框
    */
    disabled: _propTypes2.default.bool
};

Select.defaultProps = {
    size: 'default',
    className: '',
    disabled: false
};

Select.Option = _rcSelect.Option;
Select.OptGroup = _rcSelect.OptGroup;

exports.default = Select;