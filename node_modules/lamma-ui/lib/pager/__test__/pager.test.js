'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _enzymeToJson = require('enzyme-to-json');

var _enzymeToJson2 = _interopRequireDefault(_enzymeToJson);

var _pager = require('../pager');

var _pager2 = _interopRequireDefault(_pager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* global describe, it, expect */
describe('Test <Pager/>', function () {
    it('should render without throwing an error', function () {
        var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_pager2.default, { total: 100, pageSize: 15, page: 5 }));
        expect((0, _enzymeToJson2.default)(wrapper)).toMatchSnapshot();
    });
    it('should work', function () {
        var onPage = jest.fn();
        var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_pager2.default, { total: 100, pageSize: 15, page: 3, onPage: onPage }));
        wrapper.find('a').at(0).simulate('click');
        expect(onPage).toBeCalledWith({ page: 0, pageSize: 15 }); // first
        wrapper.find('a').at(1).simulate('click');
        expect(onPage).toBeCalledWith({ page: 2, pageSize: 15 }); // pre
        wrapper.find('a').at(2).simulate('click');
        expect(onPage).toBeCalledWith({ page: 4, pageSize: 15 }); // next
        wrapper.find('a').at(3).simulate('click');
        expect(onPage).toBeCalledWith({ page: 6, pageSize: 15 }); // last
        wrapper.find('Select').at(0).simulate('change', 20);
        expect(onPage).toBeCalledWith({ page: 0, pageSize: 20 });

        wrapper.find('Input').at(0).simulate('blur', { target: { value: 4 } });
        expect(onPage).toBeCalledWith({ page: 4, pageSize: 15 });
        wrapper.find('Input').at(0).simulate('blur', { target: { value: 1000 } });
        expect(onPage).toBeCalledWith({ page: 3, pageSize: 15 });
        wrapper.find('Input').at(0).simulate('blur', { target: { value: 'some string' } });
        expect(onPage).toBeCalledWith({ page: 3, pageSize: 15 });
    });
});