'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _icon = require('../icon/icon');

var _icon2 = _interopRequireDefault(_icon);

var _select = require('../select/select');

var _select2 = _interopRequireDefault(_select);

var _input = require('../input/input');

var _input2 = _interopRequireDefault(_input);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @author sunlei
 *
 * 请在这里填写当组件 **Pager** 的描述信息，可以使用 **Markdown** 语法。
 */
var Pager = function (_React$Component) {
    _inherits(Pager, _React$Component);

    function Pager(props) {
        _classCallCheck(this, Pager);

        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

        _this.state = {
            pageInputValue: null
        };
        return _this;
    }

    Pager.prototype.pageCount = function pageCount() {
        var _props = this.props,
            total = _props.total,
            pageSize = _props.pageSize;

        return total <= 0 ? 1 : Math.ceil(total / pageSize);
    };

    Pager.prototype.handleChangePage = function handleChangePage(page, e) {
        if (e) {
            e.preventDefault();
        }
        var pageCount = this.pageCount();
        if (page >= pageCount || page < 0) return;
        this.props.onPage({
            page: page,
            pageSize: this.props.pageSize
        });
    };

    Pager.prototype.handlePageInputChange = function handlePageInputChange(e) {
        this.setState({
            pageInputValue: e.target.value
        });
    };

    Pager.prototype.handlePageInputBlur = function handlePageInputBlur(e) {
        var pageCount = this.pageCount();
        var value = e.target.value;
        if (!isFinite(value) || value <= 0 || value > pageCount) {
            this.setState({
                pageInputValue: 1 + this.props.page
            });
            return;
        }
        this.props.onPage({
            page: value - 1,
            pageSize: this.props.pageSize
        });
    };

    Pager.prototype.handlePageSizeChange = function handlePageSizeChange(pageSize) {
        this.props.onPage({
            page: 0,
            pageSize: pageSize
        });
    };

    Pager.prototype.render = function render() {
        var _classNames,
            _this2 = this;

        var _props2 = this.props,
            className = _props2.className,
            page = _props2.page,
            pageSizeRange = _props2.pageSizeRange,
            pageSize = _props2.pageSize;

        var pageCount = this.pageCount();
        var rootCls = (0, _classnames2.default)((_classNames = {}, _classNames[className] = !!className, _classNames['rc-pager'] = true, _classNames));
        if (pageSizeRange.indexOf(pageSize) === -1) {
            pageSizeRange.push(pageSize);
            pageSizeRange.sort();
        }
        return _react2.default.createElement(
            'div',
            { className: rootCls },
            _react2.default.createElement(
                'span',
                { className: 'rc-pager-text' },
                '\u6BCF\u9875\u663E\u793A '
            ),
            _react2.default.createElement(
                _select2.default,
                {
                    size: 'small',
                    style: { width: 50 },
                    value: '' + pageSize,
                    onChange: function onChange(value) {
                        return _this2.handlePageSizeChange(+value);
                    }
                },
                pageSizeRange.map(function (ps) {
                    return _react2.default.createElement(
                        _select2.default.Option,
                        {
                            key: ps,
                            value: '' + ps
                        },
                        ps
                    );
                })
            ),
            _react2.default.createElement(
                'div',
                { className: 'rc-pager-right' },
                _react2.default.createElement(
                    'a',
                    { href: '#', onClick: function onClick(e) {
                            return _this2.handleChangePage(0, e);
                        } },
                    _react2.default.createElement(_icon2.default, { type: 'first' })
                ),
                _react2.default.createElement(
                    'a',
                    { href: '#', onClick: function onClick(e) {
                            return _this2.handleChangePage(page - 1, e);
                        } },
                    _react2.default.createElement(_icon2.default, { type: 'previous1' })
                ),
                _react2.default.createElement(
                    'span',
                    { className: 'rc-pager-jumper' },
                    _react2.default.createElement(
                        'span',
                        { className: 'rc-pager-text' },
                        '\u9875\u7801'
                    ),
                    _react2.default.createElement(_input2.default, {
                        value: this.state.pageInputValue === null ? page + 1 : this.state.pageInputValue,
                        onChange: function onChange(e) {
                            return _this2.handlePageInputChange(e);
                        },
                        onBlur: function onBlur(e) {
                            return _this2.handlePageInputBlur(e);
                        }
                    }),
                    _react2.default.createElement(
                        'span',
                        { className: 'rc-pager-text' },
                        '/ ',
                        pageCount
                    )
                ),
                _react2.default.createElement(
                    'a',
                    { href: '#', onClick: function onClick(e) {
                            return _this2.handleChangePage(page + 1, e);
                        } },
                    _react2.default.createElement(_icon2.default, { type: 'next1' })
                ),
                _react2.default.createElement(
                    'a',
                    { href: '#', onClick: function onClick(e) {
                            return _this2.handleChangePage(pageCount - 1, e);
                        } },
                    _react2.default.createElement(_icon2.default, { type: 'last' })
                )
            )
        );
    };

    return Pager;
}(_react2.default.Component);

exports.default = Pager;


Pager.propTypes = {

    /**
     * root css class
     */
    className: _propTypes2.default.string,

    /**
     * 当前页码，从 0 开始
     */
    page: _propTypes2.default.number,

    /**
     * 总记录数
     */
    total: _propTypes2.default.number,

    /**
     * 每页包含记录数
     */
    pageSize: _propTypes2.default.number,

    /**
     * 每页包含的记录数可选范围
     */
    pageSizeRange: _propTypes2.default.arrayOf(_propTypes2.default.number),

    /**
     * 页码切换或者，pageSize 切换时出发
     */
    onPage: _propTypes2.default.func
};

Pager.defaultProps = {
    className: '',
    page: 0,
    total: 0,
    pageSize: 10,
    pageSizeRange: [10, 20, 50],
    onPage: function onPage() {
        return null;
    }
};