'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = Radio;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _rcCheckbox = require('rc-checkbox');

var _rcCheckbox2 = _interopRequireDefault(_rcCheckbox);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * @author sunyue
 * 
 * 单选框，本组件基于 [rc-checkbox](http://react-component.github.io/checkbox/)
 */
function Radio(props) {
    var _classnames;

    var prefixCls = 'rc-radio';

    var children = props.children,
        className = props.className,
        restProps = _objectWithoutProperties(props, ['children', 'className']);

    var radioProps = _extends({}, restProps);
    var wrapperClassString = (0, _classnames3.default)(className, (_classnames = {}, _classnames[prefixCls + '-wrapper'] = true, _classnames[prefixCls + '-wrapper-checked'] = radioProps.checked, _classnames[prefixCls + '-wrapper-disabled'] = radioProps.disabled, _classnames));

    return _react2.default.createElement(
        'label',
        { className: wrapperClassString },
        _react2.default.createElement(_rcCheckbox2.default, _extends({}, radioProps, {
            prefixCls: prefixCls
        })),
        children !== undefined ? _react2.default.createElement(
            'span',
            null,
            children
        ) : null
    );
}

Radio.propTypes = {
    /**
     * root css class
     */
    className: _propTypes2.default.string,

    /**
     * lable text
     */
    children: _propTypes2.default.any
};

Radio.defaultProps = {
    className: '',
    children: ''
};