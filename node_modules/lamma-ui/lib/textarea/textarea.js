'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = Textarea;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * @author [sundi]
 * Textarea 文本框组件
 */

function Textarea(props) {
    var _textareaClassName, _classNames, _classNames2;

    var prefix = 'rc-textarea';

    var className = props.className,
        errorMsg = props.errorMsg,
        others = _objectWithoutProperties(props, ['className', 'errorMsg']);

    var textareaClassName = (_textareaClassName = {}, _textareaClassName[prefix + '-wrap'] = true, _textareaClassName);
    if (props.className) {
        textareaClassName[className] = true;
    }
    var hasErrorMsg = errorMsg && typeof errorMsg === 'string';

    var errorClassName = (0, _classnames2.default)((_classNames = {}, _classNames[prefix] = true, _classNames[prefix + '-error'] = hasErrorMsg, _classNames));

    var errorMsgClassName = (0, _classnames2.default)((_classNames2 = {}, _classNames2[prefix + '-error-text'] = true, _classNames2[prefix + '-error-hide'] = !hasErrorMsg, _classNames2));

    return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)(textareaClassName) },
        _react2.default.createElement('textarea', _extends({}, others, { className: errorClassName })),
        _react2.default.createElement(
            'span',
            { className: errorMsgClassName },
            errorMsg
        )
    );
}

Textarea.propTypes = {
    /**
     * className
     */
    className: _propTypes2.default.string,
    /**
     * errorMsg 错误信息
     */
    errorMsg: _propTypes2.default.string
};

Textarea.defaultProps = {
    className: '',
    errorMsg: ''
};